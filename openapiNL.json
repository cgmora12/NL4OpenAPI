{
  "components": {
    "schemas": {
      "mainComponent": {
        "xml": {
          "name": "mainComponent"
        },
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "example": "ACAD",
            "description": "The property Status is of type \"string\" and an example is \"\"ACAD\"\".\nIt indicates the the relative position or standing of things or especially persons in a society.\n"
          },
          "Headteacher": {
            "type": "string",
            "example": "Emme Ford",
            "description": "The property Headteacher is of type \"string\" and an example is \"\"Emme Ford\"\".\nIt indicates the the educator who has executive authority for a school.\n"
          },
          "Telephone": {
            "type": "string",
            "example": "01422 246610",
            "description": "The property Telephone is of type \"string\" and an example is \"\"01422 246610\"\".\nIt indicates the electronic equipment that converts sound into electrical signals that can be transmitted over distances and then converts received signals back into sounds.\n"
          },
          "Executive_headteacher": {
            "type": "string",
            "example": "",
            "description": "The property Executive_headteacher is of type \"string\" and an example is \"\"\"\".\nIt indicates the Executive (a person responsible for the administration of a business) headteacher (the educator who has executive authority for a school).\n"
          },
          "Website": {
            "type": "string",
            "example": "http://www.abbeyparkacademy.org",
            "description": "The property Website is of type \"string\" and an example is \"\"http://www.abbeyparkacademy.org\"\".\nIt indicates the a computer connected to the internet that maintains a series of web pages on the World Wide Web.\n"
          },
          "School_Name": {
            "type": "string",
            "example": "Abbey Park Academy",
            "description": "The property School_Name is of type \"string\" and an example is \"\"Abbey Park Academy\"\".\nIt indicates the School (an educational institution) Name.\n"
          },
          "School_Wards": {
            "type": "string",
            "example": "Illingworth and Mixenden",
            "description": "The property School_Wards is of type \"string\" and an example is \"\"Illingworth and Mixenden\"\".\nIt indicates the School (establishment where a seat of higher learning is housed, including administrative and living quarters as well as facilities for research and teaching) Wards (block forming a division of a hospital (or a suite of rooms) shared by patients who need a similar kind of care).\n"
          },
          "NOR": {
            "type": "integer",
            "example": 210,
            "description": "The property NOR is of type \"integer\" and an example is \"210\".\n"
          },
          "Previous_DFE_Code": {
            "type": "string",
            "example": "",
            "description": "The property Previous_DFE_Code is of type \"string\" and an example is \"\"\"\".\nIt indicates the Previous (previous is an open source emulator of the proprietary 68k-based NeXT computer system family, aiming at emulating the original 68030-based NeXT Computer and the 68040-based NeXTstation and NeXTcube computers.) DFE Code (a set of rules or principles or laws (especially written ones)).\n"
          },
          "Post_Code": {
            "type": "string",
            "example": "HX2 9DG",
            "description": "The property Post_Code is of type \"string\" and an example is \"\"HX2 9DG\"\".\nIt indicates the Post (the position where someone (as a guard or sentry) stands or is assigned to stand) Code ((computer science) the symbolic arrangement of data or instructions in a computer program or the set of such instructions).\n"
          },
          "Type": {
            "type": "string",
            "example": "P",
            "description": "The property Type is of type \"string\" and an example is \"\"P\"\".\nIt indicates the a subdivision of a particular kind of thing.\n"
          },
          "DFE_Code": {
            "type": "integer",
            "example": 2005,
            "description": "The property DFE_Code is of type \"integer\" and an example is \"2005\".\nIt indicates the DFE Code (a set of rules or principles or laws (especially written ones)).\n"
          },
          "Address_1": {
            "type": "string",
            "example": "Keighley Close",
            "description": "The property Address_1 is of type \"string\" and an example is \"\"Keighley Close\"\".\nIt indicates the Address (the place where a person or organization can be found or communicated with) 1.\n"
          },
          "Address_2": {
            "type": "string",
            "example": "Illingworth",
            "description": "The property Address_2 is of type \"string\" and an example is \"\"Illingworth\"\".\nIt indicates the Address (the place where a person or organization can be found or communicated with) 2.\n"
          },
          "Address_3": {
            "type": "string",
            "example": "HALIFAX",
            "description": "The property Address_3 is of type \"string\" and an example is \"\"HALIFAX\"\".\nIt indicates the Address (the place where a person or organization can be found or communicated with) 3.\n"
          },
          "Fax": {
            "type": "string",
            "example": "01422 246612",
            "description": "The property Fax is of type \"string\" and an example is \"\"01422 246612\"\".\nIt indicates the duplicator that transmits the copy by wire or radio.\n"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "openapi": "3.0.0",
  "paths": {
    "/Headteacher/{Headteacher}": {
      "get": {
        "summary": "GET Headteacher",
        "operationId": "getHeadteacher",
        "description": "Find \"schools_list\" by Headteacher.\nThis API method can be used to find \"schools_list\" data by Headteacher, and you must filter the results by a specific Headteacher.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Headteacher/\"Emme Ford\"\" or \"/?Headteacher\u003d\"Emme Ford\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Headteacher",
            "description": "The parameter \"Headteacher\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Headteacher (the educator who has executive authority for a school).\n",
            "required": true,
            "example": "Emme Ford"
          }
        ]
      }
    },
    "/Address_1/{Address_1}": {
      "get": {
        "summary": "GET Address_1",
        "operationId": "getAddress_1",
        "description": "Find \"schools_list\" by Address_1.\nThis API method can be used to find \"schools_list\" data by Address_1, and you must filter the results by a specific Address_1.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Address_1/\"Keighley Close\"\" or \"/?Address_1\u003d\"Keighley Close\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Address_1",
            "description": "The parameter \"Address_1\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Address (the place where a person or organization can be found or communicated with) 1.\n",
            "required": true,
            "example": "Keighley Close"
          }
        ]
      }
    },
    "/DFE_Code/{DFE_Code}": {
      "get": {
        "summary": "GET DFE_Code",
        "operationId": "getDFE_Code",
        "description": "Find \"schools_list\" by DFE_Code.\nThis API method can be used to find \"schools_list\" data by DFE_Code, and you must filter the results by a specific DFE_Code.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/DFE_Code/2005\" or \"/?DFE_Code\u003d2005\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "DFE_Code",
            "description": "The parameter \"DFE_Code\" is of type \"integer\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  DFE Code (a set of rules or principles or laws (especially written ones)).\n",
            "required": true,
            "example": "2005"
          }
        ]
      }
    },
    "/Executive_headteacher/{Executive_headteacher}": {
      "get": {
        "summary": "GET Executive_headteacher",
        "operationId": "getExecutive_headteacher",
        "description": "Find \"schools_list\" by Executive_headteacher.\nThis API method can be used to find \"schools_list\" data by Executive_headteacher, and you must filter the results by a specific Executive_headteacher.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Executive_headteacher/\"\"\" or \"/?Executive_headteacher\u003d\"\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Executive_headteacher",
            "description": "The parameter \"Executive_headteacher\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Executive (a person responsible for the administration of a business) headteacher (the educator who has executive authority for a school).\n",
            "required": true,
            "example": ""
          }
        ]
      }
    },
    "/Status/{Status}": {
      "get": {
        "summary": "GET Status",
        "operationId": "getStatus",
        "description": "Find \"schools_list\" by Status.\nThis API method can be used to find \"schools_list\" data by Status, and you must filter the results by a specific Status.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Status/\"ACAD\"\" or \"/?Status\u003d\"ACAD\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Status",
            "description": "The parameter \"Status\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Status (the relative position or standing of things or especially persons in a society).\n",
            "required": true,
            "example": "ACAD"
          }
        ]
      }
    },
    "/Type/{Type}": {
      "get": {
        "summary": "GET Type",
        "operationId": "getType",
        "description": "Find \"schools_list\" by Type.\nThis API method can be used to find \"schools_list\" data by Type, and you must filter the results by a specific Type.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Type/\"P\"\" or \"/?Type\u003d\"P\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Type",
            "description": "The parameter \"Type\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Type (a subdivision of a particular kind of thing).\n",
            "required": true,
            "example": "P"
          }
        ]
      }
    },
    "/Post_Code/{Post_Code}": {
      "get": {
        "summary": "GET Post_Code",
        "operationId": "getPost_Code",
        "description": "Find \"schools_list\" by Post_Code.\nThis API method can be used to find \"schools_list\" data by Post_Code, and you must filter the results by a specific Post_Code.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Post_Code/\"HX2 9DG\"\" or \"/?Post_Code\u003d\"HX2 9DG\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Post_Code",
            "description": "The parameter \"Post_Code\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Post (the position where someone (as a guard or sentry) stands or is assigned to stand) Code ((computer science) the symbolic arrangement of data or instructions in a computer program or the set of such instructions).\n",
            "required": true,
            "example": "HX2 9DG"
          }
        ]
      }
    },
    "/Telephone/{Telephone}": {
      "get": {
        "summary": "GET Telephone",
        "operationId": "getTelephone",
        "description": "Find \"schools_list\" by Telephone.\nThis API method can be used to find \"schools_list\" data by Telephone, and you must filter the results by a specific Telephone.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Telephone/\"01422 246610\"\" or \"/?Telephone\u003d\"01422 246610\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Telephone",
            "description": "The parameter \"Telephone\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  Telephone (electronic equipment that converts sound into electrical signals that can be transmitted over distances and then converts received signals back into sounds).\n",
            "required": true,
            "example": "01422 246610"
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "GET schools_list",
        "operationId": "getschools_list",
        "description": "Find all \"schools_list\".\nThis API method can be used to find all \"schools_list\", and you can filter the results by Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/\", whose result would include all the records until the limit.\nIt is possible to specify the \"limit\" and the \"offset\" parameters in order to paginate the results, or \"visualisation\" to show information in charts.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "DFE_Code",
            "description": "The parameter \"DFE_Code\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  DFE Code (a set of rules or principles or laws (especially written ones)).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Previous_DFE_Code",
            "description": "The parameter \"Previous_DFE_Code\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Previous (previous is an open source emulator of the proprietary 68k-based NeXT computer system family, aiming at emulating the original 68030-based NeXT Computer and the 68040-based NeXTstation and NeXTcube computers.) DFE Code (a set of rules or principles or laws (especially written ones)).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "School_Name",
            "description": "The parameter \"School_Name\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  School (an educational institution) Name.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Executive_headteacher",
            "description": "The parameter \"Executive_headteacher\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Executive (a person responsible for the administration of a business) headteacher (the educator who has executive authority for a school).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Headteacher",
            "description": "The parameter \"Headteacher\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Headteacher (the educator who has executive authority for a school).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Address_1",
            "description": "The parameter \"Address_1\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Address (the place where a person or organization can be found or communicated with) 1.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Address_2",
            "description": "The parameter \"Address_2\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Address (the place where a person or organization can be found or communicated with) 2.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Address_3",
            "description": "The parameter \"Address_3\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Address (the place where a person or organization can be found or communicated with) 3.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Post_Code",
            "description": "The parameter \"Post_Code\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Post (the position where someone (as a guard or sentry) stands or is assigned to stand) Code ((computer science) the symbolic arrangement of data or instructions in a computer program or the set of such instructions).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "School_Wards",
            "description": "The parameter \"School_Wards\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  School (establishment where a seat of higher learning is housed, including administrative and living quarters as well as facilities for research and teaching) Wards (block forming a division of a hospital (or a suite of rooms) shared by patients who need a similar kind of care).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Website",
            "description": "The parameter \"Website\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Website (a computer connected to the internet that maintains a series of web pages on the World Wide Web).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Telephone",
            "description": "The parameter \"Telephone\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Telephone (electronic equipment that converts sound into electrical signals that can be transmitted over distances and then converts received signals back into sounds).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Fax",
            "description": "The parameter \"Fax\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Fax (duplicator that transmits the copy by wire or radio).\n"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "NOR",
            "description": "The parameter \"NOR\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  NOR.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Status",
            "description": "The parameter \"Status\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Status (the relative position or standing of things or especially persons in a society).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Type",
            "description": "The parameter \"Type\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  Type (a subdivision of a particular kind of thing).\n"
          }
        ]
      }
    },
    "/visualisation": {
      "get": {
        "summary": "GET visualisation charts",
        "operationId": "getvisualisation",
        "description": "Find \"schools_list\" by visualisation.\nThis API method can be used to find \"schools_list\" data by visualisation, and you must filter the results by a specific visualisation.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/visualisation/\" or \"/?visualisation\u003d\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          }
        ]
      }
    },
    "/School_Wards/{School_Wards}": {
      "get": {
        "summary": "GET School_Wards",
        "operationId": "getSchool_Wards",
        "description": "Find \"schools_list\" by School_Wards.\nThis API method can be used to find \"schools_list\" data by School_Wards, and you must filter the results by a specific School_Wards.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/School_Wards/\"Illingworth and Mixenden\"\" or \"/?School_Wards\u003d\"Illingworth and Mixenden\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  limit (the greatest possible degree of something).\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  offset (cause (printed matter) to transfer or smear onto another surface).\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\nIt indicates the  visualisation (a mental image that is similar to a visual perception).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "School_Wards",
            "description": "The parameter \"School_Wards\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "Illingworth and Mixenden"
          }
        ]
      }
    },
    "/Fax/{Fax}": {
      "get": {
        "summary": "GET Fax",
        "operationId": "getFax",
        "description": "Find \"schools_list\" by Fax.\nThis API method can be used to find \"schools_list\" data by Fax, and you must filter the results by a specific Fax.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Fax/\"01422 246612\"\" or \"/?Fax\u003d\"01422 246612\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Fax",
            "description": "The parameter \"Fax\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "01422 246612"
          }
        ]
      }
    },
    "/School_Name/{School_Name}": {
      "get": {
        "summary": "GET School_Name",
        "operationId": "getSchool_Name",
        "description": "Find \"schools_list\" by School_Name.\nThis API method can be used to find \"schools_list\" data by School_Name, and you must filter the results by a specific School_Name.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/School_Name/\"Abbey Park Academy\"\" or \"/?School_Name\u003d\"Abbey Park Academy\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "School_Name",
            "description": "The parameter \"School_Name\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "Abbey Park Academy"
          }
        ]
      }
    },
    "/NOR/{NOR}": {
      "get": {
        "summary": "GET NOR",
        "operationId": "getNOR",
        "description": "Find \"schools_list\" by NOR.\nThis API method can be used to find \"schools_list\" data by NOR, and you must filter the results by a specific NOR.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/NOR/210\" or \"/?NOR\u003d210\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "NOR",
            "description": "The parameter \"NOR\" is of type \"integer\".\nThis parameter is required and  must be in \"path\".\nIt indicates the  NOR.\n",
            "required": true,
            "example": "210"
          }
        ]
      }
    },
    "/Previous_DFE_Code/{Previous_DFE_Code}": {
      "get": {
        "summary": "GET Previous_DFE_Code",
        "operationId": "getPrevious_DFE_Code",
        "description": "Find \"schools_list\" by Previous_DFE_Code.\nThis API method can be used to find \"schools_list\" data by Previous_DFE_Code, and you must filter the results by a specific Previous_DFE_Code.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Previous_DFE_Code/\"\"\" or \"/?Previous_DFE_Code\u003d\"\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Previous_DFE_Code",
            "description": "The parameter \"Previous_DFE_Code\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": ""
          }
        ]
      }
    },
    "/Website/{Website}": {
      "get": {
        "summary": "GET Website",
        "operationId": "getWebsite",
        "description": "Find \"schools_list\" by Website.\nThis API method can be used to find \"schools_list\" data by Website, and you must filter the results by a specific Website.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Website/\"http://www.abbeyparkacademy.org\"\" or \"/?Website\u003d\"http://www.abbeyparkacademy.org\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Website",
            "description": "The parameter \"Website\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "http://www.abbeyparkacademy.org"
          }
        ]
      }
    },
    "/Address_2/{Address_2}": {
      "get": {
        "summary": "GET Address_2",
        "operationId": "getAddress_2",
        "description": "Find \"schools_list\" by Address_2.\nThis API method can be used to find \"schools_list\" data by Address_2, and you must filter the results by a specific Address_2.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Address_2/\"Illingworth\"\" or \"/?Address_2\u003d\"Illingworth\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Address_2",
            "description": "The parameter \"Address_2\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "Illingworth"
          }
        ]
      }
    },
    "/Address_3/{Address_3}": {
      "get": {
        "summary": "GET Address_3",
        "operationId": "getAddress_3",
        "description": "Find \"schools_list\" by Address_3.\nThis API method can be used to find \"schools_list\" data by Address_3, and you must filter the results by a specific Address_3.\nThese results will contain the following fields: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nAn example of using this method is \"/Address_3/\"HALIFAX\"\" or \"/?Address_3\u003d\"HALIFAX\"\", whose result would include at least the following record:\n{\n  \"Status\" : \"\"ACAD\"\", \n  \"Headteacher\" : \"\"Emme Ford\"\", \n  \"Telephone\" : \"\"01422 246610\"\", \n  \"Executive_headteacher\" : \"\"\"\", \n  \"Website\" : \"\"http://www.abbeyparkacademy.org\"\", \n  \"School_Name\" : \"\"Abbey Park Academy\"\", \n  \"School_Wards\" : \"\"Illingworth and Mixenden\"\", \n  \"NOR\" : \"210\", \n  \"Previous_DFE_Code\" : \"\"\"\", \n  \"Post_Code\" : \"\"HX2 9DG\"\", \n  \"Type\" : \"\"P\"\", \n  \"DFE_Code\" : \"2005\", \n  \"Address_1\" : \"\"Keighley Close\"\", \n  \"Address_2\" : \"\"Illingworth\"\", \n  \"Address_3\" : \"\"HALIFAX\"\", \n  \"Fax\" : \"\"01422 246612\"\"\n}",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mainComponent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "The parameter \"limit\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "10000"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "offset",
            "description": "The parameter \"offset\" is of type \"integer\".\nThis parameter is not required and must be in \"query\".\n",
            "example": "0"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "visualisation",
            "description": "The parameter \"visualisation\" is of type \"string\".\nThis parameter is not required and must be in \"query\".\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "Address_3",
            "description": "The parameter \"Address_3\" is of type \"string\".\nThis parameter is required and  must be in \"path\".\n",
            "required": true,
            "example": "HALIFAX"
          }
        ]
      }
    }
  },
  "info": {
    "description": "This API returns data about the \"schools_list\", being able to filter by different characteristics, for example: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nThe API response will be in JSON format, containing a list of objects with properties: Status, Headteacher, Telephone, Executive_headteacher, Website, School_Name, School_Wards, NOR, Previous_DFE_Code, Post_Code, Type, DFE_Code, Address_1, Address_2, Address_3, Fax.\nIn addition, the following parameters can always be used: visualisation, which is used to show the information graphically; limit, which serves to limit the maximum number of results to show (default 10000); and offset, to indicate from which number to return from the results set, very useful for pagination results.\nAn example of a query would be the following: localhost:8080/Status/\"ACAD\"",
    "title": "schools_list",
    "version": "1.0.0"
  }
}